@page "/jobs"
@inject TeenKomContext _dbContext;

<h3>Blitzjobs</h3>
<MatButton Icon="add" OnClick="@NewJob">Neuer Blitzjob</MatButton>

<MatTable Items="Jobs">
	<MatTableHeader>
		<th>Ort</th>
		<th>Kunde</th>
		<th>Blitzjob Titel</th>
		<th>Tätigkeiten</th>
		<th>Datum Anfang</th>
		<th>Datum Ende</th>
		<th>Notizen</th>
		<th>Vergütung</th>
		<th>Status</th>
		<th>Blitzjobber</th>
	</MatTableHeader>
	<MatTableRow>
		<td>@context.Place</td>
		<td>@context.Customer</td>
		<td>@context.Category</td>
		<td>@context.Details</td>
		<td>@context.StartDate</td>
		<td>@context.EndDate</td>
		<td>@context.Note</td>
		<td>@context.HourlyRate €/h (Insgesamt: @(Math.Round(context.HourlyRate * (context.EndDate - context.StartDate).TotalHours, 2)) € )</td>
		<td>
			<p>@context.Status</p>
			@if (context.Status == Status.NotReady)
			{
				<MatButton OnClick="() => context.Status = Status.Ready">Bereit</MatButton>
			}
			else if (context.Status == Status.Accepted)
			{
				<MatButton OnClick="() => context.Status = Status.WaitForReview">Blitzjob Erledigt</MatButton>
			}
			else if (context.Status == Status.WaitForReview)
			{
				<MatButton OnClick="() => context.Status = Status.Done">Review schreiben</MatButton>
			}
		</td>
		<td>
			<div style="display:flex; flex-direction:row">
				@if (context.BlitzjobbersAssigned != null)
				{
					<table>
						@foreach (var u in context.BlitzjobbersAssigned)
						{
							if (u?.Blitzjobber == null)
								continue;
							<tr><td>@u.Blitzjobber.ToString()</td></tr>
						}
					</table>
				}
				<MatButton Disabled="(context.Status != Status.Ready)" OnClick="@(() => OpenDialog(context))" Icon="add"></MatButton>
				@if (context.Status == Status.Ready)
				{
					<MatButton Disabled="(!context.BlitzjobbersAssigned?.Any() ?? true)" OnClick="@(async () => await SetAssigned(context))">Sende Benachrichtigung</MatButton>
				}

			</div>
		</td>
	</MatTableRow>
</MatTable>


<MatDialog @bind-IsOpen="@dialogIsOpen">
	<MatDialogTitle>Neuen Blitzjobber hinzufügen</MatDialogTitle>
	<MatDialogContent>
		<MatSelectItem Items="Blitzjobber" @bind-Value="@blitzjobber"></MatSelectItem>
	</MatDialogContent>
	<MatDialogActions>
		<MatButton OnClick="@(e => { dialogIsOpen = false; })">Abbrechen</MatButton>
		<MatButton OnClick="@OkClick">OK</MatButton>
	</MatDialogActions>
</MatDialog>



<MatDialog @bind-IsOpen="@dialogNewJobIsOpen">
	<MatDialogTitle>Neuen Job hinzufügen</MatDialogTitle>
	<MatDialogContent>
		@if (dialogNewJobIsOpen)
		{
			<MatTextField Label="Ort" TValue="string" @bind-Value="@newJob.Place"></MatTextField>
			<MatSelectItem Items="((IReadOnlyList<Category>)Enum.GetValues(typeof(Category)))" TValue="Category" @bind-Value="@newJob.Category"></MatSelectItem>
		}
		<p>Die anderen Sachen folgen...</p>

	</MatDialogContent>
	<MatDialogActions>
		<MatButton OnClick="@(e => { dialogNewJobIsOpen = false; })">Abbrechen</MatButton>
		<MatButton Raised="true" OnClick="(async () => await NewJobOkClick())">OK</MatButton>
	</MatDialogActions>
</MatDialog>

